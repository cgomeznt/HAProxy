Instalar HAProxy y configurar el archivo /etc/haproxy/haproxy.conf para el client
==================================================================================

Instalamos Haproxy::

	dnf -y install haproxy

Listo..!!!

Ahora solo es editar el archvio y adaptarlo::
	
	
	#---------------------------------------------------------------------
	# Example configuration for a possible web application.  See the
	# full configuration options online.
	#
	#   https://www.haproxy.org/download/1.8/doc/configuration.txt
	#
	#---------------------------------------------------------------------
	
	#---------------------------------------------------------------------
	# Global settings
	#---------------------------------------------------------------------
	global
	    # to have these messages end up in /var/log/haproxy.log you will
	    # need to:
	    #
	    # 1) configure syslog to accept network log events.  This is done
	    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
	    #    /etc/sysconfig/syslog
	    #
	    # 2) configure local2 events to go to the /var/log/haproxy.log
	    #   file. A line like the following can be added to
	    #   /etc/sysconfig/syslog
	    #
	    #    local2.*                       /var/log/haproxy.log
	    #
	    log         127.0.0.1 local2
	
	    chroot      /var/lib/haproxy
	    pidfile     /var/run/haproxy.pid
	    maxconn     4000
	    user        haproxy
	    group       haproxy
	    daemon
	
	    # turn on stats unix socket
	    stats socket /var/lib/haproxy/stats
	
	    # utilize system-wide crypto-policies
	    ssl-default-bind-ciphers PROFILE=SYSTEM
	    ssl-default-server-ciphers PROFILE=SYSTEM
	
	#---------------------------------------------------------------------
	# common defaults that all the 'listen' and 'backend' sections will
	# use if not designated in their block
	#---------------------------------------------------------------------
	defaults
	    mode                    http
	    log                     global
	    option                  httplog
	    option                  dontlognull
	    option http-server-close
	    option forwardfor       except 127.0.0.0/8
	    option                  redispatch
	    retries                 3
	    timeout http-request    10s
	    timeout queue           1m
	    timeout connect         10s
	    timeout client          1m
	    timeout server          1m
	    timeout http-keep-alive 10s
	    timeout check           10s
	    maxconn                 3000
	
	#---------------------------------------------------------------------
	# main frontend which proxys to the backends
	#---------------------------------------------------------------------
	
	frontend http-in
	    bind *:80
	
	    # TLS1.2 y Cipher Fuertes
	    bind *:443 ssl crt /certs/sencamer.pem ssl-min-ver TLSv1.2 ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305
	    # TLS1.3 y Cipher Fuertes
	    # bind *:443 ssl crt /certs/sencamer.pem ssl-min-ver TLSv1.3 ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	
	
	#---------------------------------------------------------------------
	# INICIO Seguridad
	#---------------------------------------------------------------------
	# Table definition
	#stick-table type ip size 100k expire 30s store conn_cur
	stick-table type ip size 1m expire 10s store gpc0,http_req_rate(5s),http_err_rate(10s),conn_cur
	
	# Shut the new connection as long as the client has already 10 opened
	tcp-request connection reject if { src_conn_cur ge 20 }
	tcp-request connection track-sc1 src
	
	# Limiting the HTTP request rate
	# Use General Purpose Couter (gpc) 0 in SC1 as a global abuse counter
	# Monitors the number of request sent by an IP over a period of 10 seconds
	#stick-table type ip size 1m expire 10s store gpc0,http_req_rate(5s)
	#tcp-request connection track-sc1 src
	#tcp-request connection reject if { src_get_gpc0 gt 0 }
	
	# Detecting vulnerability scans
	# Use General Purpose Couter 0 in SC1 as a global abuse counter
	# Monitors the number of errors generated by an IP over a period of 10 seconds
	#stick-table type ip size 1m expire 10s store gpc0,http_err_rate(10s)
	tcp-request connection track-sc1 src
	tcp-request connection reject if { src_get_gpc0 gt 0 }
	#---------------------------------------------------------------------
	# FIN Seguridad
	#---------------------------------------------------------------------
	
	
	    acl sub1 hdr_sub(host) -i web1.sencamer.gob.ve
	    acl sub2 hdr_sub(host) -i web2.sencamer.gob.ve
	    acl sub3 hdr_sub(host) -i web3.sencamer.gob.ve
	
	    use_backend web1_backend if sub1
	    use_backend web2_backend if sub2
	    use_backend web3_backend if sub3
	
	########################################################
	#### Esto es lo que se debe modificar ##################
	####################################################
	    acl sub11 hdr_sub(host) -i enlinea.sencamer.gob.ve
	    acl sub10 hdr_sub(host) -i envasados.sencamer.gob.ve
	    acl sub9 hdr_sub(host) -i factura.sencamer.gob.ve
	    acl sub8 hdr_sub(host) -i sis.sencamer.gob.ve
	    acl sub6 hdr_sub(host) -i ciss.sencamer.gob.ve
	    acl sub7 hdr_sub(host) -i consultasenv.sencamer.gob.ve
	    acl sub5 hdr_sub(host) -i www.sencamer.gob.ve
	    acl sub4 hdr_sub(host) -i sencamer.gob.ve
		
	    use_backend enlinea_backend if sub11
	    use_backend envasados_backend if sub10
	    use_backend factura_backend if sub9
	    use_backend sis_backend if sub8
	    use_backend ciss_backend if sub6
	    use_backend consultasenv_backend if sub7
	    use_backend www_backend if sub5
	    use_backend www_backend if sub4
	
	########################################################
	#### Esto es lo que se debe modificar ##################
	####################################################
	
	#---------------------------------------------------------------------
	# round robin balancing between the various backends
	#---------------------------------------------------------------------
	
	#####################################################
	#### INICIO Esto es lo que se debe modificar ##################
	####################################################
	
	backend www_backend
	    mode http
	    option forwardfor
	
	#---------------------------------------------------------------------
	# INICIO Seguridad
	#---------------------------------------------------------------------
	        # Limiting the HTTP request rate
	        # If the source IP sent 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        #acl abuse src_http_req_rate(http-in) ge 10
	        #acl flag_abuser src_inc_gpc0(http-in)
	        #tcp-request content reject if abuse flag_abuser
	
	        # Detecting vulnerability scans
	        # If the source IP generated 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        acl abuse src_http_err_rate(http-in) ge 10
	        acl flag_abuser src_inc_gpc0(http-in)
	#---------------------------------------------------------------------
	# FIN Seguridad
	#---------------------------------------------------------------------
	
	    #http-send-name-header Host
	    http-request set-header Host www.sencamer.gob.ve 
	    server www_server  172.18.5.35:443 ssl verify none
	
	backend ciss_backend
	    mode http
	    option forwardfor
	#---------------------------------------------------------------------
	# INICIO Seguridad
	#---------------------------------------------------------------------
	        # Limiting the HTTP request rate
	        # If the source IP sent 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        #acl abuse src_http_req_rate(http-in) ge 10
	        #acl flag_abuser src_inc_gpc0(http-in)
	        #tcp-request content reject if abuse flag_abuser
	
	        # Detecting vulnerability scans
	        # If the source IP generated 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        acl abuse src_http_err_rate(http-in) ge 10
	        acl flag_abuser src_inc_gpc0(http-in)
	#---------------------------------------------------------------------
	# FIN Seguridad
	#---------------------------------------------------------------------
	
	    #http-send-name-header Host
	    http-request set-header Host ciss.sencamer.gob.ve 
	    server ciss_server  172.24.100.55:80
	
	backend consultasenv_backend
	    mode http
	    option forwardfor
	
	#---------------------------------------------------------------------
	# INICIO Seguridad
	#---------------------------------------------------------------------
	        # Limiting the HTTP request rate
	        # If the source IP sent 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        #acl abuse src_http_req_rate(http-in) ge 10
	        #acl flag_abuser src_inc_gpc0(http-in)
	        #tcp-request content reject if abuse flag_abuser
	
	        # Detecting vulnerability scans
	        # If the source IP generated 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        acl abuse src_http_err_rate(http-in) ge 10
	        acl flag_abuser src_inc_gpc0(http-in)
	#---------------------------------------------------------------------
	# FIN Seguridad
	#---------------------------------------------------------------------
	
	    #http-send-name-header Host
	    http-request set-header Host consultasenv.sencamer.gob.ve
	    server consultasenv_server  172.24.100.55:80
	
	
	backend sis_backend
	    mode http
	    option forwardfor
	
	#---------------------------------------------------------------------
	# INICIO Seguridad
	#---------------------------------------------------------------------
	        # Limiting the HTTP request rate
	        # If the source IP sent 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        #acl abuse src_http_req_rate(http-in) ge 10
	        #acl flag_abuser src_inc_gpc0(http-in)
	        #tcp-request content reject if abuse flag_abuser
	
	        # Detecting vulnerability scans
	        # If the source IP generated 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        #acl abuse src_http_err_rate(http-in) ge 10
	        #acl flag_abuser src_inc_gpc0(http-in)
	#---------------------------------------------------------------------
	# FIN Seguridad
	#---------------------------------------------------------------------
	
	    #http-send-name-header Host
	    http-request set-header Host sis.sencamer.gob.ve 
	    server sis_server  172.24.100.154:80
	
	backend factura_backend
	    mode http
	    option forwardfor
	
	#---------------------------------------------------------------------
	# INICIO Seguridad
	#---------------------------------------------------------------------
	        # Limiting the HTTP request rate
	        # If the source IP sent 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        #acl abuse src_http_req_rate(http-in) ge 10
	        #acl flag_abuser src_inc_gpc0(http-in)
	        #tcp-request content reject if abuse flag_abuser
	
	        # Detecting vulnerability scans
	        # If the source IP generated 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        #acl abuse src_http_err_rate(http-in) ge 10
	        #acl flag_abuser src_inc_gpc0(http-in)
	#---------------------------------------------------------------------
	# FIN Seguridad
	#---------------------------------------------------------------------
	
	    #http-send-name-header Host
	    http-request set-header Host factura.sencamer.gob.ve
	    server factura_server  172.24.100.146:80
	
	
	
	backend envasados_backend
	    mode http
	    option forwardfor
	
	#---------------------------------------------------------------------
	# INICIO Seguridad
	#---------------------------------------------------------------------
	        # Limiting the HTTP request rate
	        # If the source IP sent 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        #acl abuse src_http_req_rate(http-in) ge 10
	        #acl flag_abuser src_inc_gpc0(http-in)
	        #tcp-request content reject if abuse flag_abuser
	
	        # Detecting vulnerability scans
	        # If the source IP generated 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        #acl abuse src_http_err_rate(http-in) ge 10
	        #acl flag_abuser src_inc_gpc0(http-in)
	#---------------------------------------------------------------------
	# FIN Seguridad
	#---------------------------------------------------------------------
	
	    #http-send-name-header Host
	    http-request set-header Host envasados.sencamer.gob.ve
	    server envasados_server  172.24.100.146:80
	
	
	
	backend enlinea_backend
	    mode http
	    option forwardfor
	
	#---------------------------------------------------------------------
	# INICIO Seguridad
	#---------------------------------------------------------------------
	        # Limiting the HTTP request rate
	        # If the source IP sent 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        #acl abuse src_http_req_rate(http-in) ge 10
	        #acl flag_abuser src_inc_gpc0(http-in)
	        #tcp-request content reject if abuse flag_abuser
	
	        # Detecting vulnerability scans
	        # If the source IP generated 10 or more http request over the defined period,
	        # flag the IP as abuser on the frontend
	        #acl abuse src_http_err_rate(http-in) ge 10
	        #acl flag_abuser src_inc_gpc0(http-in)
	#---------------------------------------------------------------------
	# FIN Seguridad
	#---------------------------------------------------------------------
	
	    #http-send-name-header Host
	    http-request set-header Host enlinea.sencamer.gob.ve
	    server enlinea_server  172.24.100.146:80
	
	
	
	
	
	#####################################################
	#### FIN Esto es lo que se debe modificar ##################
	####################################################
	
	backend web1_backend
	    mode http
	    option forwardfor
	    #http-send-name-header Host
	    http-request set-header Host www.public.com #if { srv_id 1 } # Este es el nombre del VHOST
	    server web1_server 172.24.100.147:80
	
	
	backend web2_backend
	    mode http
	    option forwardfor
	    #http-send-name-header Host
	    http-request set-header Host www.private.com #if { srv_id 1 } # Este es el nombre del VHOST
	    server web2_server 172.24.100.147:80
	
	
	backend web3_backend
	    mode http
	    option forwardfor
	    #http-send-name-header Host
	    http-request set-header Host www.free.com #if { srv_id 1 } # Este es el nombre del VHOST
    server web3_server 172.24.100.147:80


